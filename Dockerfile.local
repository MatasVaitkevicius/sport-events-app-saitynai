# Global settings
ARG PHP_VERSION=8.0.3
ARG NGINX_VERSION=1.17

FROM php:${PHP_VERSION}-fpm as sport-events-app

# Copy composer.lock and composer.json
COPY composer.lock composer.json /var/www/

# Set working directory
WORKDIR /var/www

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    postgresql-client \
    libzip-dev \
    libpq-dev \
    libonig-dev \
    locales \
    zip \
    vim \
    unzip \
    git \
    curl

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install pdo
RUN apt-get install -y libpq-dev \
    && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \
    && docker-php-ext-install pdo pdo_pgsql pgsql

# Install xdebug
RUN pecl install xdebug && docker-php-ext-enable xdebug

# Install extensions
RUN docker-php-ext-install mbstring zip exif pcntl

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy existing application directory contents
COPY . /var/www

# Set the environment file
RUN php -r "file_exists('.env') || copy('.env.local', '.env');"

# Install composer packages
RUN composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

# Add user for lumen application
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

# Add required user directory permissions
RUN chown -R www:www /var/www
RUN php -r "file_exists('/var/www/bootstrap/cache') || mkdir('/var/www/bootstrap/cache');"
RUN chgrp -R www-data storage bootstrap/cache
RUN chmod -R ug+rwx storage bootstrap/cache

# Change current user to www
USER www

# Expose port 9000 and start php-fpm server
EXPOSE 9000
CMD ["php-fpm"]

# NGINX
FROM nginx:${NGINX_VERSION}-alpine as sport-events-webserver

COPY config/nginx/conf.d/app.conf /etc/nginx/conf.d/

WORKDIR /var/www

COPY --from=sport-events-app /var/www/public public/

# QUEUE Worker
FROM php:${PHP_VERSION}-fpm as sport-events-worker

# Copy composer.lock and composer.json
COPY composer.lock composer.json /var/www/

# Set working directory
WORKDIR /var/www

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    postgresql-client \
    libzip-dev \
    libpq-dev \
    libonig-dev \
    locales \
    zip \
    vim \
    unzip \
    git \
    curl

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install pdo
RUN apt-get install -y libpq-dev \
    && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \
    && docker-php-ext-install pdo pdo_pgsql pgsql

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy existing application directory contents
COPY . /var/www

# Set the environment file
RUN php -r "file_exists('.env') || copy('.env.local', '.env');"

# Install composer packages
RUN composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

# Add user for lumen application
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

# Add required user directory permissions
RUN chown -R www:www /var/www
RUN php -r "file_exists('/var/www/bootstrap/cache') || mkdir('/var/www/bootstrap/cache');"
RUN chgrp -R www-data storage bootstrap/cache
RUN chmod -R ug+rwx storage bootstrap/cache

# Change current user to www
USER www

# Expose port 9001 and start php-fpm server
EXPOSE 9001
